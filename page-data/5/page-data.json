{"componentChunkName":"component---src-templates-pagination-js","path":"/5/","result":{"data":{"site":{"siteMetadata":{"title":"10cheon00의 Archive"}},"allMarkdownRemark":{"nodes":[{"excerpt":"의도 한 집합에 속해있는 객체의 상호작용을 캡슐화하는 객체를 정의한다. 객체들이 서로를 참조하지 않고 중재자 객체를 참조하도록 하여 과도한 결합을 줄인다. UML  상호작용을 할 객체(Colleague)들은 모두 mediator…","fields":{"slug":"/design-patterns/중재자-패턴/"},"frontmatter":{"date":"August 06, 2023","title":"중재자 패턴","description":null,"tags":["design-pattern"]}},{"excerpt":"…","fields":{"slug":"/design-patterns/인터프리터-패턴/"},"frontmatter":{"date":"August 05, 2023","title":"인터프리터 패턴","description":null,"tags":["design-pattern"]}},{"excerpt":"동기 Gatsby로 블로그를 만들 때 Gatsby Starter Blog 테마를 적용했다. 매우 깔끔한 테마에 파일 구조도 단순하여 금방 글을 작성하여 배운 내용을 정리하고 있었다. 어느덧 게시글 수가 2…","fields":{"slug":"/posts/Gatsby-starter-blog테마에-pagination-추가하기/"},"frontmatter":{"date":"August 02, 2023","title":"Gatsby Starter Blog테마에 Pagination 추가하기","description":null,"tags":["gatsby","blog","react"]}},{"excerpt":"의도 객체의 내부 표현부를 노출하지 않으면서 집합에 속한 원소들을 순회하는 방법을 제공한다. 리스트 객체에 접근해서 새로운 내용을 삽입, 삭제 또는 순회하는 내용을 반복자 객체에 정의하여 집합 객체의 인터페이스를 확장시키지 않게 된다. UML…","fields":{"slug":"/design-patterns/반복자-패턴/"},"frontmatter":{"date":"August 02, 2023","title":"반복자 패턴","description":null,"tags":["design-pattern"]}},{"excerpt":"의도 요청 자체를 캡슐화하는 것이다. 이를 통해 사용자를 서로 다른 요청으로 매개변수화하거나, 요청을 로깅 또는 대기시킬 수 있고, 되돌릴 수 있는 연산을 지원한다. UML  Receiver…","fields":{"slug":"/design-patterns/명령-패턴/"},"frontmatter":{"date":"July 31, 2023","title":"명령 패턴","description":null,"tags":["design-pattern"]}},{"excerpt":"의도 메시지를 보내는 객체와 이를 받아 처리하는 객체들 간의 결합도를 낮춘다. 어떤 요청을 받았을 때 그 요청을 처리할 수 없다면 자신과 연결된 객체에게 전달하여 모든 객체가 그 요청을 처리할 수 있도록 설계한다. UML  Handler…","fields":{"slug":"/design-patterns/책임-연쇄-패턴/"},"frontmatter":{"date":"July 30, 2023","title":"책임 연쇄 패턴","description":null,"tags":["design-pattern"]}},{"excerpt":"의도 다른 객체에 대한 접근을 제어하기 위한 대리자 또는 Placeholder 역할을 하는 객체를 두기 위해 쓴다. UML  RealSubject는 Subject 인터페이스를 상속한 서브 클래스다. 사용자는 Subject…","fields":{"slug":"/design-patterns/프록시-패턴/"},"frontmatter":{"date":"July 29, 2023","title":"프록시 패턴","description":null,"tags":["design-pattern"]}},{"excerpt":"의도 공유를 통해 다수의 작은 객체들을 지원한다. 수많은 객체가 하나의 클래스에 대해 각각의 인스턴스를 갖게 하기보다 미리 생성해놓은 인스턴스의 참조자를 가지도록 만드는 것이다. UML  사용자(Client)는 팩토리(FlyweightFactory…","fields":{"slug":"/design-patterns/플라이웨이트-패턴/"},"frontmatter":{"date":"July 28, 2023","title":"플라이웨이트 패턴","description":null,"tags":["design-pattern"]}},{"excerpt":"의도 한 서브 시스템 내의 인터페이스 집합에 대한 획일화된 하나의 인터페이스를 제공하는 패턴으로, 서브 시스템을 사용하기 쉽도록 상위 수준의 인터페이스를 정의한다. UML…","fields":{"slug":"/design-patterns/퍼사드-패턴/"},"frontmatter":{"date":"July 27, 2023","title":"퍼사드 패턴","description":null,"tags":["design-pattern"]}},{"excerpt":"의도 객체에 동적으로 새로운 책임을 추가한다. 기능을 추가할 때 서브 클래스를 만드는 것보다 더 쉬운 방법을 제공한다. UML  컴포지트 패턴처럼 기초가 될 Component 추상 클래스를 정의한다. Component…","fields":{"slug":"/design-patterns/데코레이터-패턴/"},"frontmatter":{"date":"July 26, 2023","title":"데코레이터 패턴","description":null,"tags":["design-pattern"]}}]}},"pageContext":{"limit":10,"skip":40,"currentPage":5,"numPagination":5,"paginationPageCount":7}},"staticQueryHashes":["1846574571","230163734","3589320610"],"slicesMap":{}}